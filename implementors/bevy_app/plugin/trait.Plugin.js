(function() {var implementors = {};
implementors["bevy_datasize"] = [{"text":"impl Plugin for <a class=\"struct\" href=\"bevy_datasize/builtins/render/struct.ImageMemoryUsagePlugin.html\" title=\"struct bevy_datasize::builtins::render::ImageMemoryUsagePlugin\">ImageMemoryUsagePlugin</a>","synthetic":false,"types":["bevy_datasize::builtins::render::image::ImageMemoryUsagePlugin"]},{"text":"impl Plugin for <a class=\"struct\" href=\"bevy_datasize/builtins/render/struct.MaterialMemoryUsagePlugin.html\" title=\"struct bevy_datasize::builtins::render::MaterialMemoryUsagePlugin\">MaterialMemoryUsagePlugin</a>","synthetic":false,"types":["bevy_datasize::builtins::render::material::MaterialMemoryUsagePlugin"]},{"text":"impl Plugin for <a class=\"struct\" href=\"bevy_datasize/builtins/render/struct.MeshMemoryUsagePlugin.html\" title=\"struct bevy_datasize::builtins::render::MeshMemoryUsagePlugin\">MeshMemoryUsagePlugin</a>","synthetic":false,"types":["bevy_datasize::builtins::render::mesh::MeshMemoryUsagePlugin"]},{"text":"impl Plugin for <a class=\"struct\" href=\"bevy_datasize/builtins/render/struct.RenderMemoryUsagePlugin.html\" title=\"struct bevy_datasize::builtins::render::RenderMemoryUsagePlugin\">RenderMemoryUsagePlugin</a>","synthetic":false,"types":["bevy_datasize::builtins::render::RenderMemoryUsagePlugin"]},{"text":"impl Plugin for <a class=\"struct\" href=\"bevy_datasize/builtins/transform/struct.TransformMemoryUsagePlugin.html\" title=\"struct bevy_datasize::builtins::transform::TransformMemoryUsagePlugin\">TransformMemoryUsagePlugin</a>","synthetic":false,"types":["bevy_datasize::builtins::transform::TransformMemoryUsagePlugin"]},{"text":"impl Plugin for <a class=\"struct\" href=\"bevy_datasize/prelude/struct.MemoryUsagePlugin.html\" title=\"struct bevy_datasize::prelude::MemoryUsagePlugin\">MemoryUsagePlugin</a>","synthetic":false,"types":["bevy_datasize::plugin::MemoryUsagePlugin"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()